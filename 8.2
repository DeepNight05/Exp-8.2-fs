// server.js
const express = require('express');
const jwt = require('jsonwebtoken');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());

// ✅ Hardcoded user for simplicity
const user = {
  username: 'admin',
  password: '12345'
};

// ✅ Secret key for signing JWTs
const JWT_SECRET = 'mysecretkey';

// 🟢 LOGIN ROUTE (Generates token)
app.post('/login', (req, res) => {
  const { username, password } = req.body;

  // Check credentials
  if (username === user.username && password === user.password) {
    // Create token (expires in 1 hour)
    const token = jwt.sign({ username }, JWT_SECRET, { expiresIn: '1h' });
    res.json({ message: 'Login successful', token });
  } else {
    res.status(401).json({ message: 'Invalid username or password' });
  }
});

// 🟢 JWT VERIFICATION MIDDLEWARE
function verifyToken(req, res, next) {
  const authHeader = req.headers['authorization'];
  
  // Token comes as: "Bearer <token>"
  const token = authHeader && authHeader.split(' ')[1];

  if (!token) return res.status(403).json({ message: 'Token missing' });

  // Verify token
  jwt.verify(token, JWT_SECRET, (err, decoded) => {
    if (err) return res.status(401).json({ message: 'Invalid or expired token' });
    req.user = decoded; // store user info
    next();
  });
}

// 🔒 PROTECTED ROUTE
app.get('/protected', verifyToken, (req, res) => {
  res.json({
    message: 'Access granted to protected route',
    user: req.user
  });
});

// 🌐 PUBLIC ROUTE
app.get('/', (req, res) => {
  res.send('Welcome to the JWT Authentication Demo!');
});

// 🚀 START SERVER
const PORT = 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
